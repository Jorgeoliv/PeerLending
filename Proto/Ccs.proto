syntax = "proto2";

package cliente;


message Autenticacao{
    required string username = 1;
    required string password = 2;
}


message RespostaAutenticacao{
    required bool sucesso = 1;
    optional string papel = 2;
}

enum TipoMensagem {
    LEILAO = 1;
    EMISSAO = 2;
}

message MensagemUtilizador{
    required TipoMensagem tipo = 1 [default = LEILAO];
    required string utilizador = 2;
    oneof mensagem {
        MensagemEmpresa empresa = 3;
        MensagemInvestidor investidor = 4;
    }
}

message MensagemEmpresa{
    optional CriacaoLeilao leilao = 1;
    optional EmissaoTaxaFixa emissao = 2;
}

message CriacaoLeilao{
    required int64 montante = 1;
    required float taxa = 2;
    required int64 tempo = 3;
}

message EmissaoTaxaFixa{
    required int64 montante = 1;
    required int64 tempo = 2;
}

message MensagemInvestidor{
    optional LicitacaoLeilao leilao = 1;
    optional SubscricaoTaxaFixa emissao = 2;
}

message LicitacaoLeilao{
    required string empresa = 1;
    required int64 montante = 2;
    required float taxa = 3;
}

message SubscricaoTaxaFixa{
    required string empresa = 1;
    required int64 montante = 2;
}

/* possivelmente vai ser necessario uma resposta tanto para a empresa
# como para o investidor a informar o resultado da sua operacao
*/
message Resposta{
    required TipoMensagem tipo = 1 [default = LEILAO];
    required string utilizador = 2;
    required bool sucesso = 3;
    optional string mensagem = 4;
}

message NotificacaoUltrapassado{
    required TipoMensagem tipo = 1 [default = LEILAO];
    required float taxa = 2;
    required int64 montante = 3;
    required string investidor = 4;
    optional string mensagem = 5;
}

/*
# Mensagem para o resultado tanto das licitacoes como leiloes
# na string pode vir logo todo o texto, pois nao sei se sera facil
# apresentar arrays e assim tambem mostra logo tudo
*/
message Resultado{
    required TipoMensagem tipo = 1 [default = LEILAO];
    required string utilizador = 2;
    required string texto = 3;
}

